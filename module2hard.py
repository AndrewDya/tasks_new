# Задание "Слишком древний шифр":
# Вы отправились в путешествие на необитаемый остров и конечно же в очередной
# вылазке в джунгли вы попали в ловушку местному племени.
# Вы поняли это, когда после долгих блужданий перед вами появились ворота
# (выход из ловушки) с двумя каменными вставками для чисел.
# В первом поле камни с числом менялись постоянно (от 3 до 20)
# случайным образом, а второе было всегда пустым.
#
# К вашему счастью рядом с менее успешными и уже неговорящими путешественниками
# находился попируc, где были написаны правила для решения этого "ребуса".
#
# Во вторую вставку нужно было написать те пары чисел друг за другом,
# чтобы число из первой вставки было кратно сумме их значений.
#
# Пример 1:
# 9 - число из первой вставки
# 1218273645 - нужный пароль (1 и 2, 1 и 8, 2 и 7, 3 и 6, 4 и 5 - пары; число 9 кратно сумме каждой пары)
#
# Пример 2:
# 11 - число из первой вставки
# 11029384756 - нужный пароль (1 и 10, 2 и 9, 3 и 8, 4 и 7, 5 и 6 - пары; число 11 кратно сумме каждой пары)
#
# Составьте алгоритм, используя циклы, чтобы в независимости
# от введённого числа n (от 3 до 20) программа выдавала нужный пароль
# result, для одного введённого числа.

import random

first_var = random.randint(3,20)

password_list = []
print(first_var)
for i in range(1, first_var):
    for j in range(i + 1, first_var):
        if first_var % (i + j) == 0:
            print(f"{i} + {j} = {i + j}")
            password_list.append(str(i) + str(j))

result = ''.join(password_list)
print(result)
